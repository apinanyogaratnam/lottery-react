{"version":3,"sources":["logo.svg","web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","App","state","manager","players","balance","value","message","onSubmit","event","a","preventDefault","getAccounts","accounts","setState","lottery","methods","enter","send","from","utils","toWei","onClick","pickWinner","call","getPlayers","getBalance","options","address","this","length","fromWei","onChange","target","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kgBAAe,I,wBCEfA,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAElC,IAEeC,EAFF,IAAIC,IAAKL,OAAOC,UCqDd,MAAIG,EAAKE,IAAIC,SAtDhB,CACV,CACEC,UAAU,EACVC,OAAQ,GACRC,KAAM,UACNC,QAAS,CAAC,CAAED,KAAM,GAAIE,KAAM,YAC5BC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,GACTE,SAAS,EACTC,gBAAiB,aACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,CAAC,CAAED,KAAM,GAAIE,KAAM,cAC5BC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,QACNC,QAAS,GACTE,SAAS,EACTC,gBAAiB,UACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CAAC,CAAEC,KAAM,GAAIE,KAAM,YAC3BF,KAAM,UACNC,QAAS,CAAC,CAAED,KAAM,GAAIE,KAAM,YAC5BC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,GACRI,SAAS,EACTC,gBAAiB,aACjBF,KAAM,gBAnDM,8C,QCIVG,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,MAAO,GACPC,QAAS,I,EAWXC,S,uCAAW,WAAOC,GAAP,eAAAC,EAAA,6DACTD,EAAME,iBADG,SAGcrB,EAAKE,IAAIoB,cAHvB,cAGHC,EAHG,OAKT,EAAKC,SAAS,CAAEP,QAAS,sCALhB,SAOHQ,EAAQC,QAAQC,QAAQC,KAAK,CACjCC,KAAMN,EAAS,GACfP,MAAOhB,EAAK8B,MAAMC,MAAM,EAAKnB,MAAMI,MAAO,WATnC,OAYT,EAAKQ,SAAS,CAAEP,QAAS,2BAZhB,2C,wDAeXe,Q,sBAAU,4BAAAZ,EAAA,sEACepB,EAAKE,IAAIoB,cADxB,cACFC,EADE,OAGR,EAAKC,SAAS,CAAEP,QAAS,sCAHjB,SAIFQ,EAAQC,QAAQO,aAAaL,KAAK,CACtCC,KAAMN,EAAS,KALT,OAQR,EAAKC,SAAS,CAAEP,QAAS,8BARjB,2C,8FAvBV,gCAAAG,EAAA,sEACwBK,EAAQC,QAAQb,UAAUqB,OADlD,cACQrB,EADR,gBAEwBY,EAAQC,QAAQS,aAAaD,OAFrD,cAEQpB,EAFR,gBAGwBd,EAAKE,IAAIkC,WAAWX,EAAQY,QAAQC,SAH5D,OAGQvB,EAHR,OAKEwB,KAAKf,SAAS,CAAEX,UAASC,UAASC,YALpC,iD,0EAkCA,WAAU,IAAD,OACP,OACE,gCACE,8DACA,6DAC+BwB,KAAK3B,MAAMC,QAD1C,yBAEuB0B,KAAK3B,MAAME,QAAQ0B,OAF1C,6BAGoBxC,EAAK8B,MAAMW,QAAQF,KAAK3B,MAAMG,QAAS,SAH3D,aAKA,uBACA,uBAAMG,SAAUqB,KAAKrB,SAArB,UACE,wDACA,gCACE,6DACA,uBACEwB,SAAU,SAAAvB,GAAK,OAAI,EAAKK,SAAS,CAAER,MAAOG,EAAMwB,OAAO3B,SACvDA,MAAOuB,KAAK3B,MAAMI,WAGtB,8CAGF,uBAEA,yDACA,wBAAQgB,QAASO,KAAKP,QAAtB,2BAEA,uBAEA,6BAAKO,KAAK3B,MAAMK,iB,GAxEN2B,IAAMC,WA6ETlC,ICvEAmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bce7c214.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Web3 from 'web3';\n\nwindow.ethereum.request({ method: 'eth_requestAccounts' });\n\nconst web3 = new Web3(window.ethereum);\n\nexport default web3;\n","import web3 from \"./web3\";\n\nconst address = \"0x0fe7c2d6C39E7c9C1D5DEBd1762BA1FD45B5E6CB\";\nconst abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"manager\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getPlayers\",\n    outputs: [{ name: \"\", type: \"address[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"uint256\" }],\n    name: \"players\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport web3 from './web3';\nimport lottery from './lottery';\n\nclass App extends React.Component {\n  state = {\n    manager: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: ''\n  };\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ manager, players, balance });\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    \n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' });\n\n    await lottery.methods.enter().send({ \n      from: accounts[0], \n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n\n    this.setState({ message: 'You have been entered!' });\n  }\n\n  onClick = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' })\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    });\n\n    this.setState({ message: 'A winner has been picked!' });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>this is our lottery contract</h2>\n        <p>\n          This contract is managed by {this.state.manager}.\n          There are currently {this.state.players.length} players \n          competing to win {web3.utils.fromWei(this.state.balance, 'ether')} ether!\n        </p>\n        <hr />\n        <form onSubmit={this.onSubmit}>\n          <h4>Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input \n              onChange={event => this.setState({ value: event.target.value })}\n              value={this.state.value}\n            ></input>\n          </div>\n          <button>Enter</button>\n        </form>\n\n        <hr />\n\n        <h4>Ready to pick a winner?</h4>\n        <button onClick={this.onClick}>Pick a winner</button>\n\n        <hr />\n\n        <h1>{this.state.message}</h1>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}